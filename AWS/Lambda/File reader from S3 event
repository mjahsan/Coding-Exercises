"""
==========================================================================================================
AWS Lambda Function: S3 File Reader
==========================================================================================================

This Lambda function is triggered whenever a new file is uploaded to an S3 bucket (via an S3 event trigger).
It performs the following operations:

---> Extracts the S3 bucket name and object (file) key from the event payload.

---> Uses the Boto3 S3 client to access the file using the get_object API.

---> Reads and decodes the file content (UTF-8) â€” suitable for small to medium files (<10MB).

---> Prints the size of the data read from the file.

---> Returns an HTTP-style JSON response containing the length of the file content.

This serves as a base example for building event-driven data processing workflows using AWS Lambda and S3.
"""

import json
import boto3
from botocore.exceptions import ClientError
from fileinput import filename

#Calling S3 using boto3
s3_client = boto3.client("s3")

def lambda_handler(event, context):
    #Extracting the bucket and file name from the event
    for record in event['Records']:
        bucketname = record['s3']['bucket']['name']
        filename = record['s3']['object']['key']

    try:
        #Accessing the file via .get_object API
        data = s3_client.get_object(Bucket=bucketname, Key=filename)

    
        #Reading the file - suitable for smaller files (<10MB)
        file_data = data.get('Body').read().decode('utf-8')
        print(f'Finished reading {len(file_data)} from the source file')

    except:
        print('Error reading the file', ClientError)
        
    return {
        'statusCode': 200,
        'body': json.dumps(len(file_data))
    }
